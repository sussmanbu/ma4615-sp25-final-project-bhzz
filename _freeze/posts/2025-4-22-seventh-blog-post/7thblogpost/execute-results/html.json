{
  "hash": "67b2875ffb8a99ced332ed14aaae2d28",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Seventh blog post\"\nsubtitle: \"\"\ndescription:  |\n  This blog post presents two interactive Shiny dashboards analyzing racial and gender disparities in Chicago crime victim data. Users can compare victim demographics with census data and explore patterns by crime type, sex, and race.\nauthor: \"BHZZ\"\ndate: \"2025-04-22\"\nimage: image1-blog7.png\nimage-alt: \"\"\ncategories: []\ndate-modified: \"2025-04-22\"\ndraft: FALSE\n---\n\n\n\n# Run in console\ninstall.packages(\"tidycensus\")\n\nDashboard#1: Race Representation in Chicago: Crime Victims vs Population by year 2021, 2022, and 2023\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidycensus)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'tidycensus' was built under R version 4.4.3\n```\n\n\n:::\n\n```{.r .cell-code}\n# importing census data for 2021, 202, and 2022\ncensus_api_key(\"c4df8a0f6334859b29db81b64e1ac48b98038f19\", overwrite = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nTo install your API key for use in future sessions, run this function with `install = TRUE`.\n```\n\n\n:::\n\n```{.r .cell-code}\n# 2021\ndata2021 <- get_acs(\n  geography = \"place\",\n  variables = c(\n    total = \"B03002_001\",\n    white = \"B03002_003\",\n    black = \"B03002_004\",\n    native = \"B03002_005\",\n    asian = \"B03002_006\",\n    hispanic = \"B03002_012\"\n  ),\n  state = \"IL\",\n  year = 2021,\n  survey = \"acs1\"\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nGetting data from the 2021 1-year ACS\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe 1-year ACS provides data for geographies with populations of 65,000 and greater.\n```\n\n\n:::\n\n```{.r .cell-code}\nsaveRDS(data2021, \"dataset/chicago_census_2021.rds\")\n\n# 2022\ndata2022 <- get_acs(\n  geography = \"place\",\n  variables = c(\n    total = \"B03002_001\",\n    white = \"B03002_003\",\n    black = \"B03002_004\",\n    native = \"B03002_005\",\n    asian = \"B03002_006\",\n    hispanic = \"B03002_012\"\n  ),\n  state = \"IL\",\n  year = 2022,\n  survey = \"acs1\"\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nGetting data from the 2022 1-year ACS\nThe 1-year ACS provides data for geographies with populations of 65,000 and greater.\n```\n\n\n:::\n\n```{.r .cell-code}\nsaveRDS(data2022, \"dataset/chicago_census_2022.rds\")\n\n# 2023\ndata2023 <- get_acs(\n  geography = \"place\",\n  variables = c(\n    total = \"B03002_001\",\n    white = \"B03002_003\",\n    black = \"B03002_004\",\n    native = \"B03002_005\",\n    asian = \"B03002_006\",\n    hispanic = \"B03002_012\"\n  ),\n  state = \"IL\",\n  year = 2023,\n  survey = \"acs1\"\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nGetting data from the 2023 1-year ACS\nThe 1-year ACS provides data for geographies with populations of 65,000 and greater.\n```\n\n\n:::\n\n```{.r .cell-code}\nsaveRDS(data2023, \"dataset/chicago_census_2023.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(shiny)\nlibrary(ggplot2)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tidyr)\nlibrary(readr)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# ==== UI ====\nui <- fluidPage(\n  titlePanel(\"Race Representation in Chicago: Crime Victims vs Population\"),\n  sidebarLayout(\n    sidebarPanel(\n      selectInput(\"year\", \"Select Year:\", choices = c(2021, 2022, 2023), selected = 2021)\n    ),\n    mainPanel(\n      plotOutput(\"race_plot\"),\n      br(),\n      textOutput(\"note\")\n    )\n  )\n)\n```\n:::\n\n\n=======\n**Progress**\nWe've explored the dataset and started cleaning it in R while identifying variables like arrest date, borough, offense description, and demographic details that will be central to the interactive. Our next step is to build the Shiny app that includes both a time trend chart and dropdown filters for user exploration.\n\n**Interactive**\nWe're creating the interactive dashboard called Arrest Trends Explorer, which will let users explore NYPD arrest data from different angles. \n- The goal is to make the data accessible and engaging by allowing users to view big picture trends like total arrests over time. \n- Users will also be able to \"zoom in\" on more specific patterns. \n- Users will be able to filter the data by borough, offense type, and demographic categories such as age or race. \n- This gives them the power to investigate questions that are personally meaningful or socially relevant, such as whether certain neighborhoods experience more arrests for specific types of crimes, or how trends shift over the course of a year.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ==== Server ====\nserver <- function(input, output) {\n  # Load violence data once\n  violence_data <- read_csv(\"dataset/Violence_clean_missing.csv\", show_col_types = FALSE)\n\n  output$race_plot <- renderPlot({\n    # ==== 1. Load census data ====\n    census_raw <- readRDS(paste0(\"dataset/chicago_census_\", input$year, \".rds\"))\n\n    census_df <- census_raw |>\n      filter(NAME == \"Chicago city, Illinois\") |>\n      select(variable, estimate) |>\n      pivot_wider(names_from = variable, values_from = estimate) |>\n      mutate(\n        WHI = white / total * 100,\n        BLK = black / total * 100,\n        HIS = hispanic / total * 100,\n        API = asian / total * 100,\n        I   = native / total * 100\n      ) |>\n      select(WHI, BLK, HIS, API, I) |>\n      pivot_longer(cols = everything(), names_to = \"RACE\", values_to = \"Proportion\") |>\n      mutate(Source = \"Census\")\n\n    # ==== 2. Create crime victim data ====\n    victim_df <- violence_data |>\n      filter(Year == input$year) |>\n      filter(!(RACE %in% c(\"UNKNOWN\", \"S\"))) |>\n      mutate(RACE = ifelse(RACE %in% c(\"WBH\", \"WWH\"), \"HIS\", RACE)) |>\n      group_by(RACE) |>\n      summarise(Count = n(), .groups = \"drop\") |>\n      mutate(Proportion = Count / sum(Count) * 100,\n             Source = \"Crime Victims\") |>\n      select(RACE, Proportion, Source)\n    \n    \n    # ==== 3. Combine and plot ====\n    combined <- bind_rows(census_df, victim_df)\n\n    ggplot(combined, aes(x = RACE, y = Proportion, fill = Source)) +\n      geom_col(position = \"dodge\") +\n      labs(title = paste(\"Race Representation in Chicago (\", input$year, \")\", sep = \"\"),\n           x = \"Race\", y = \"Proportion (%)\") +\n      theme_minimal()\n  })\n\n  # Add a note\n  output$note <- renderText({\n    paste0(\"Note: Population data for \", input$year,\n           \" comes from the U.S. Census ACS 1-Year Estimates. \",\n           \"Crime data reflects victim demographics recorded by CPD in the same year.\")\n  })\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# ==== Run App ====\nshinyApp(ui = ui, server = server)\n```\n\n::: {.cell-output-display}\n`<div style=\"width: 100% ; height: 400px ; text-align: center; box-sizing: border-box; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;\" class=\"muted well\">Shiny applications not supported in static R Markdown documents</div>`{=html}\n:::\n:::\n\n\n![](image1-blog7.png)\n\nDashboard#2: \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nviolence_data <- read_csv(\"dataset/Violence_clean_missing.csv\", show_col_types = FALSE)\n\n\n# ========== UI ==========\nui2 <- fluidPage(\n  titlePanel(\"Victim Demographics by Crime Type\"),\n  sidebarLayout(\n    sidebarPanel(\n      selectInput(\"crime_type\", \"Select Crime Type:\",\n                  choices = unique(violence_data$PRIMARY_TYPE),\n                  selected = \"BATTERY\"),\n      checkboxGroupInput(\"sex\", \"Select Gender:\",\n                         choices = unique(violence_data$SEX),\n                         selected = c(\"M\", \"F\")),\n      checkboxGroupInput(\"race\", \"Select Race:\",\n                         choices = unique(violence_data$RACE),\n                         selected = c(\"BLK\", \"WHI\", \"HIS\", \"API\"))\n    ),\n    mainPanel(\n      plotOutput(\"distPlot\")\n    )\n  )\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# ========== SERVER ==========\nserver2 <- function(input, output) {\n  output$distPlot <- renderPlot({\n    filtered <- violence_data |>\n      filter(PRIMARY_TYPE == input$crime_type,\n             SEX %in% input$sex,\n             RACE %in% input$race)\n\n    ggplot(filtered, aes(x = SEX, fill = RACE)) +\n      geom_bar(position = \"stack\") +\n      labs(\n        title = paste(\"Victim Gender-Race Distribution for\", input$crime_type),\n        x = \"Gender\", y = \"Number of Victims\", fill = \"Race\"\n      ) +\n      theme_minimal()\n  })\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# ==== Run App ====\nshinyApp(ui2, server2)\n```\n\n::: {.cell-output-display}\n`<div style=\"width: 100% ; height: 400px ; text-align: center; box-sizing: border-box; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;\" class=\"muted well\">Shiny applications not supported in static R Markdown documents</div>`{=html}\n:::\n:::\n\n\n![](image2-blog7.png)",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}