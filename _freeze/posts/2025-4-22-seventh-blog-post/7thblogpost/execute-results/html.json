{
  "hash": "69f78a1f5f592cd30dd2695b1b25abd6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Seventh blog post\"\nsubtitle: \"\"\ndescription:  |\n  This post is the seventh blog post for group 12.\nauthor: \"BHZZ\"\ndate: \"2025-04-22\"\nimage: \"\"\nimage-alt: \"\"\ncategories: []\ndate-modified: \"2025-04-22\"\ndraft: FALSE\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n# Preparation\nlibrary(shiny)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tidycensus)\nlibrary(ggplot2)\nlibrary(tidyr)\n\n\n# Load the data\nViolence_clean_missing <- read.csv(\"dataset/Violence_clean_missing.csv\")\n\n# Accessing census data\ncensus_api_key(\"c4df8a0f6334859b29db81b64e1ac48b98038f19\", install = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nYour API key has been stored in your .Renviron and can be accessed by Sys.getenv(\"CENSUS_API_KEY\"). \nTo use now, restart R or run `readRenviron(\"~/.Renviron\")`\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"c4df8a0f6334859b29db81b64e1ac48b98038f19\"\n```\n\n\n:::\n\n```{.r .cell-code}\nget_acs(geography = \"state\", variables = \"B01001_001\", year = 2020)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nGetting data from the 2016-2020 5-year ACS\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: • You have not set a Census API key. Users without a key are limited to 500\nqueries per day and may experience performance limitations.\nℹ For best results, get a Census API key at\nhttp://api.census.gov/data/key_signup.html and then supply the key to the\n`census_api_key()` function to use it throughout your tidycensus session.\nThis warning is displayed once per session.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 52 × 5\n   GEOID NAME                 variable   estimate   moe\n   <chr> <chr>                <chr>         <dbl> <dbl>\n 1 01    Alabama              B01001_001  4893186    NA\n 2 02    Alaska               B01001_001   736990    NA\n 3 04    Arizona              B01001_001  7174064    NA\n 4 05    Arkansas             B01001_001  3011873    NA\n 5 06    California           B01001_001 39346023    NA\n 6 08    Colorado             B01001_001  5684926    NA\n 7 09    Connecticut          B01001_001  3570549    NA\n 8 10    Delaware             B01001_001   967679    NA\n 9 11    District of Columbia B01001_001   701974    NA\n10 12    Florida              B01001_001 21216924    NA\n# ℹ 42 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nget_chicago_race_proportion <- function(year) {\n  vars <- c(\n    total = \"B03002_001\",\n    white = \"B03002_003\",\n    black = \"B03002_004\",\n    native = \"B03002_005\",\n    asian = \"B03002_006\",\n    hispanic = \"B03002_012\"\n  )\n  \n  raw <- get_acs(\n    geography = \"place\",\n    variables = vars,\n    state = \"IL\",\n    year = year,\n    survey = \"acs1\",\n    geometry = FALSE\n  )\n  \n  chicago_row <- raw %>%\n    filter(NAME == \"Chicago city, Illinois\") %>%\n    select(variable, estimate) %>%\n    pivot_wider(names_from = variable, values_from = estimate)\n  \n  if (nrow(chicago_row) == 0) return(NULL)\n\n  chicago_row %>%\n    mutate(\n      WHI = B03002_003 / B03002_001 * 100,\n      BLK = B03002_004 / B03002_001 * 100,\n      HIS = B03002_012 / B03002_001 * 100,\n      API = B03002_006 / B03002_001 * 100,\n      I   = B03002_005 / B03002_001 * 100\n    ) %>%\n    select(WHI, BLK, HIS, API, I) %>%\n    pivot_longer(cols = everything(), names_to = \"RACE\", values_to = \"Proportion\") %>%\n    mutate(Source = \"Census\")\n}\n\n# Shiny UI\nui <- fluidPage(\n  titlePanel(\"Chicago Crime Victims vs Census Population (Auto-Fetch)\"),\n  sidebarLayout(\n    sidebarPanel(\n      selectInput(\"year\", \"Select Year (ACS 1-Year):\", choices = c(2016:2022), selected = 2020)\n    ),\n    mainPanel(\n      plotOutput(\"race_plot\"),\n      textOutput(\"note\")\n    )\n  )\n)\n\n# Server logic\nserver <- function(input, output) {\n  \n  output$race_plot <- renderPlot({\n    # 获取人口比例数据\n    census_df <- get_chicago_race_proportion(input$year)\n    \n    if (is.null(census_df)) {\n      return(NULL)\n    }\n    \n    # 获取犯罪受害者比例\n    decade_start <- input$year\n    decade_end <- decade_start + 1\n\n    victim_df <- Violence_clean_missing %>%\n      filter(Year >= decade_start, Year < decade_end) %>%\n      filter(!(RACE %in% c(\"UNKNOWN\", \"S\"))) %>%\n      mutate(RACE = ifelse(RACE %in% c(\"WBH\", \"WWH\"), \"HIS\", RACE)) %>%\n      group_by(RACE) %>%\n      summarise(Count = n()) %>%\n      mutate(Proportion = Count / sum(Count) * 100,\n             Source = \"Crime Victims\") %>%\n      select(RACE, Proportion, Source)\n    \n    combined_df <- bind_rows(census_df, victim_df)\n\n    ggplot(combined_df, aes(x = RACE, y = Proportion, fill = Source)) +\n      geom_col(position = \"dodge\") +\n      labs(title = paste(\"Race Representation in\", input$year),\n           x = \"Race\", y = \"Proportion (%)\") +\n      theme_minimal()\n  })\n\n  output$note <- renderText({\n    paste0(\"Note: Census data pulled live from ACS 1-Year estimates for \", input$year,\n           \". Crime data reflects victim records from the same year.\")\n  })\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nshinyApp(ui, server)\n```\n\n::: {.cell-output-display}\n`<div style=\"width: 100% ; height: 400px ; text-align: center; box-sizing: border-box; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;\" class=\"muted well\">Shiny applications not supported in static R Markdown documents</div>`{=html}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}