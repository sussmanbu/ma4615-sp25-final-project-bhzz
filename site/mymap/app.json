[{"name":"app.R","content":"Dashboard#1: Race Representation in Chicago: Crime Victims vs Population by year 2021, 2022, and 2023\n\n```{shinylive-r setup}\nlibrary(shiny)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(readr)\n\nviolence_data <- read_csv(\"https://sussmanbu.github.io/ma4615-sp25-final-project-bhzz/scripts/Violence_clean_missing.csv\", show_col_types = FALSE)\n\n```\n\n```{shinylive-r ui}\n# ==== UI ====\nui <- fluidPage(\n  titlePanel(\"Race Representation in Chicago: Crime Victims vs Population\"),\n  sidebarLayout(\n    sidebarPanel(\n      selectInput(\"year\", \"Select Year:\", choices = c(2021, 2022, 2023), selected = 2021)\n    ),\n    mainPanel(\n      plotOutput(\"race_plot\"),\n      br(),\n      textOutput(\"note\")\n    )\n  )\n)\n\n\n```\n\n\n```{shinylive-r server}\n# ==== Server ====\nserver <- function(input, output) {\n  \n  output$race_plot <- renderPlot({\n    # ==== 1. Load census data ====\n    census_raw <- readRDS(paste0(\"https://sussmanbu.github.io/ma4615-sp25-final-project-bhzz/scripts/chicago_census_\", input$year, \".rds\"))\n    \n    census_df <- census_raw |>\n      filter(NAME == \"Chicago city, Illinois\") |>\n      select(variable, estimate) |>\n      pivot_wider(names_from = variable, values_from = estimate) |>\n      mutate(\n        WHI = white / total * 100,\n        BLK = black / total * 100,\n        HIS = hispanic / total * 100,\n        API = asian / total * 100,\n        I   = native / total * 100\n      ) |>\n      select(WHI, BLK, HIS, API, I) |>\n      pivot_longer(cols = everything(), names_to = \"RACE\", values_to = \"Proportion\") |>\n      mutate(Source = \"Census\")\n    \n    # ==== 2. Create crime victim data ====\n    victim_df <- violence_data |>\n      filter(Year == input$year) |>\n      filter(!(RACE %in% c(\"UNKNOWN\", \"S\"))) |>\n      mutate(RACE = ifelse(RACE %in% c(\"WBH\", \"WWH\"), \"HIS\", RACE)) |>\n      group_by(RACE) |>\n      summarise(Count = n(), .groups = \"drop\") |>\n      mutate(Proportion = Count / sum(Count) * 100,\n             Source = \"Crime Victims\") |>\n      select(RACE, Proportion, Source)\n    \n    \n    # ==== 3. Combine and plot ====\n    combined <- bind_rows(census_df, victim_df)\n    \n    ggplot(combined, aes(x = RACE, y = Proportion, fill = Source)) +\n      geom_col(position = \"dodge\") +\n      labs(title = paste(\"Race Representation in Chicago (\", input$year, \")\", sep = \"\"),\n           x = \"Race\", y = \"Proportion (%)\") +\n      theme_minimal()\n  })\n  \n  # Add a note\n  output$note <- renderText({\n    paste0(\"Note: Population data for \", input$year,\n           \" comes from the U.S. Census ACS 1-Year Estimates. \",\n           \"Crime data reflects victim demographics recorded by CPD in the same year.\")\n  })\n}\n\n```\n\n```{shinylive-r run}\n# ==== Run App ====\nshinyApp(ui = ui, server = server)\n\n```\n\nDashboard#2: \n\n```{shinylive-r ui2}\n\n# ========== UI ==========\nui2 <- fluidPage(\n  titlePanel(\"Victim Demographics by Crime Type\"),\n  sidebarLayout(\n    sidebarPanel(\n      selectInput(\"crime_type\", \"Select Crime Type:\",\n                  choices = unique(violence_data$PRIMARY_TYPE),\n                  selected = \"BATTERY\"),\n      checkboxGroupInput(\"sex\", \"Select Gender:\",\n                         choices = unique(violence_data$SEX),\n                         selected = c(\"M\", \"F\")),\n      checkboxGroupInput(\"race\", \"Select Race:\",\n                         choices = unique(violence_data$RACE),\n                         selected = c(\"BLK\", \"WHI\", \"HIS\", \"API\"))\n    ),\n    mainPanel(\n      plotOutput(\"distPlot\")\n    )\n  )\n)\n\n```\n\n```{shinylive-r server2}\n\n# ========== SERVER ==========\nserver2 <- function(input, output) {\n  output$distPlot <- renderPlot({\n    filtered <- violence_data |>\n      filter(PRIMARY_TYPE == input$crime_type,\n             SEX %in% input$sex,\n             RACE %in% input$race)\n    \n    ggplot(filtered, aes(x = SEX, fill = RACE)) +\n      geom_bar(position = \"stack\") +\n      labs(\n        title = paste(\"Victim Gender-Race Distribution for\", input$crime_type),\n        x = \"Gender\", y = \"Number of Victims\", fill = \"Race\"\n      ) +\n      theme_minimal()\n  })\n}\n\n```\n\n\n```{shinylive-r run2}\n# ==== Run App ====\nshinyApp(ui2, server2)\n\n```\n\n\n","type":"text"}]
